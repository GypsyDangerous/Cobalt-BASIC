Cobalt BASIC grammar rules

expr        : KEYWORD:(let|var) IDENTIFIER EQ expr
            : comp-expr ((and|or) comp-expr)
            
comp-expr   : not comp-expr
            : arith-expr ((EE|LT|GT|LTE|GETE) arith-expr)*
        
arith-expr  : term ((PLUS|MINUS) term)*

term        : factor ((MUL|DIV|MOD) factor)*

factor      : (PLUS|MINUS) factor
            : power

power       : call (POW factor)*

call		: atom (LPAREN (expr (COMMA expr)*)? RPAREN)?

atom 		: INT|FLOAT|IDENTIFIER
			: LPAREN expr RPAREN
			: if-expr
			: for-expr
			: while-expr
			: func-def

if-expr		: KEYWORD:IF expr KEYWORD:THEN expr
			(KEYWORD:ELIF expr KEYWORD:THEN expr)*
			(KEYWORD:ELSE expr)?

for-expr	: KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr 
			(KEYWORD:STEP expr)? KEYWORD:THEN expr

while-expr	: KEYWORD:WHILE expr KEYWORD:THEN expr

func-def	: KEYWORD def IDENTIFIER?
			  LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
			  ARROW expr


